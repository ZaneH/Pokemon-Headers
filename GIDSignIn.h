//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "GIDSignInWebViewControllerDelegate.h"
#import "SFSafariViewControllerDelegate.h"

@class GIDGoogleUser, GIDRuntimeConfigFetcher, GIDSignInCallbackSchemes, NSArray, NSString;

@interface GIDSignIn : NSObject <GIDSignInWebViewControllerDelegate, SFSafariViewControllerDelegate>
{
    GIDSignInCallbackSchemes *_schemes;
    NSString *_scopeString;
    NSString *_keychainName;
    double _lastAuthenticateTimestamp;
    GIDRuntimeConfigFetcher *_configFetcher;
    _Bool _hasSafariViewController;
    id _safariViewController;
    _Bool _shouldFetchBasicProfile;
    _Bool _allowsCanOpenURL;
    GIDGoogleUser *_currentUser;
    id <GIDSignInDelegate> _delegate;
    id <GIDSignInUIDelegate> _uiDelegate;
    NSString *_clientID;
    NSArray *_scopes;
    NSString *_language;
    NSString *_loginHint;
    NSString *_serverClientID;
    NSString *_openIDRealm;
    NSString *_hostedDomain;
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (_Bool)isOperatingSystemAtLeast9;
+ (id)sharedInstance;
+ (_Bool)supportsCurrentUserKVO;
- (void).cxx_destruct;
- (id)SSOURLOfScheme:(id)arg1 verifier:(id)arg2 params:(id)arg3;
- (_Bool)URLIsFromBrowser:(id)arg1 sourceApplication:(id)arg2;
- (_Bool)URLIsFromSSO:(id)arg1 sourceApplication:(id)arg2;
- (void)addAdditionalTokenRequestParameters:(id)arg1 toAuth:(id)arg2;
- (void)addCallDelegateCallback:(id)arg1;
- (void)addCallUIDelegateCallback:(id)arg1;
- (void)addClearVerifierCallback:(id)arg1;
- (void)addCodeReadyCallbacks:(id)arg1;
- (void)addDecodeIdTokenCallback:(id)arg1;
- (void)addOpenIDRealmToAuth:(id)arg1;
- (void)addSaveAuthCallback:(id)arg1 toKeychain:(_Bool)arg2;
- (void)addSavedKeychainName:(id)arg1;
- (void)addServerClientIDToAuth:(id)arg1;
- (void)addVerifierToAuth:(id)arg1;
@property(nonatomic) _Bool allowsCanOpenURL; // @synthesize allowsCanOpenURL=_allowsCanOpenURL;
- (id)appBundleID;
- (double)appSwitchRandomNumber;
- (void)assertValidParameters;
- (void)assertValidUIDelegate;
- (void)authenticateInteractivelyWithOptions:(id)arg1;
- (_Bool)authenticateWithOptions:(id)arg1 appSwitchConfig:(id)arg2;
- (id)canceledError;
- (void)clearAndAuthenticateWithOptions:(id)arg1;
- (void)clearAuthentication;
- (_Bool)clearSavedKeychainNames;
@property(copy, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(readonly, nonatomic) GIDGoogleUser *currentUser; // @synthesize currentUser=_currentUser;
- (void)dealloc;
@property(nonatomic) __weak id <GIDSignInDelegate> delegate; // @synthesize delegate=_delegate;
- (void)didChangeParameters;
- (void)didDisconnectWithUser:(id)arg1 error:(id)arg2;
- (void)disconnect;
- (void)disconnectWithUser:(id)arg1;
- (void)dismissViewController:(id)arg1;
- (id)errorWithString:(id)arg1 code:(long long)arg2;
- (void)fetchRuntimeConfigWithHandler:(id)arg1;
- (void)fetchUserID:(id)arg1;
- (id)fingerprint;
- (void)finishWithKeychainError;
- (_Bool)generateVerifier;
- (id)getEscapedKeychainNames;
- (_Bool)handleURL:(id)arg1 fromGoogleSSOApp:(_Bool)arg2;
- (_Bool)handleURL:(id)arg1 sourceApplication:(id)arg2 annotation:(id)arg3;
- (_Bool)hasAuthInKeychain;
@property(copy, nonatomic) NSString *hostedDomain; // @synthesize hostedDomain=_hostedDomain;
- (void)informUIDelegateOfDispatchResult:(id)arg1;
- (id)init;
- (_Bool)isFreshInstall;
- (id)keychainError;
@property(copy, nonatomic) NSString *language; // @synthesize language=_language;
- (double)lastAuthenticateTimestamp;
@property(copy, nonatomic) NSString *loginHint; // @synthesize loginHint=_loginHint;
- (_Bool)matchesSavedFingerprint;
- (void)maybeFetchToken:(id)arg1 fallback:(id)arg2;
- (id)noSignInHandlersInstalledError;
- (id)oauth2URLWithParams:(id)arg1 verifier:(id)arg2;
@property(copy, nonatomic) NSString *openIDRealm; // @synthesize openIDRealm=_openIDRealm;
- (_Bool)openInBrowser:(id)arg1;
- (void)openWebViewWithURL:(id)arg1;
- (void)parseAuthURL:(id)arg1 fromSSO:(_Bool)arg2 authFlow:(id)arg3;
- (void)presentViewController:(id)arg1;
- (id)randomString;
- (id)redirectURI;
- (void)removeAdditionalTokenRequestParametersFromAuth:(id)arg1;
- (void)removeAllKeychainEntries;
- (void)safariViewControllerDidFinish:(id)arg1;
- (_Bool)save:(id)arg1 toKeychain:(id)arg2;
- (_Bool)saveFingerprint;
- (id)schemesWithAppSwitchConfig:(id)arg1 includeWebBrowserScheme:(_Bool)arg2 includeWebViewScheme:(_Bool)arg3 includeSafariViewControllerScheme:(_Bool)arg4;
@property(copy, nonatomic) NSArray *scopes; // @synthesize scopes=_scopes;
- (id)sdkVersionLoggingValue;
@property(copy, nonatomic) NSString *serverClientID; // @synthesize serverClientID=_serverClientID;
- (void)setEscapedKeychainNames:(id)arg1;
@property(nonatomic) _Bool shouldFetchBasicProfile; // @synthesize shouldFetchBasicProfile=_shouldFetchBasicProfile;
@property(nonatomic) __weak id <GIDSignInUIDelegate> uiDelegate; // @synthesize uiDelegate=_uiDelegate;
- (void)signIn;
- (void)signInSilently;
- (_Bool)signInWebViewController:(id)arg1 shouldKeepLSOCookiesForAuthResponseURL:(id)arg2;
- (_Bool)signInWebViewController:(id)arg1 shouldTreatURLAsAuthResponse:(id)arg2;
- (void)signInWebViewControllerDidComplete:(id)arg1 withURL:(id)arg2 error:(id)arg3;
- (void)signInWebViewControllerNeedsDismissing:(id)arg1;
- (void)signInWithOptions:(id)arg1;
- (void)signOut;
- (void)signOutWithUser:(id)arg1;
- (void)startFetchURL:(id)arg1 fromAuth:(id)arg2 withComment:(id)arg3 withCompletionHandler:(id)arg4;
- (id)stringFromKeychain:(id)arg1;
- (id)unknownError;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

